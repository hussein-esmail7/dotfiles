#!/bin/bash

# If you see anything that can be improved/fixed, please create a pull request :)

# Directory this file is being run from
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

os=$(uname)     # Determine what OS is being used
sudo -v         # Ask for user password immediately so it doesn't keep asking multiple times

echo -n "Email for git: "
read GIT_EMAIL

echo "source ~/git/dotfiles/bashrc" >> ~/.bashrc
if [[ ! -z "$GIT_EMAIL" ]] ; then
    echo -n "Name for git: "
    read GIT_NAME

    git config --global user.email "$GIT_EMAIL"
    git config --global user.name "$GIT_NAME"
fi

# Install Plug for vim if it is not installed
mkdir -p "~/.vim/autoload/"
[[ ! -f "~/.vim/autoload/plug.vim" ]] ; curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# From this point on, all the commands are operating-system specific

if [[ $os == "Linux" ]] ; then # Arch-based systems only
    ls -s "$DIR/vimrc" "~/.vimrc"
    
    pacman --noconfirm --needed --noprogressbar -Syu newsboat-git steam discord ttf-ms-fonts zoom gimp discord youtube-dl snapd brave calibre chromium neofetch obs-studio thunderbird mlocate unrar foobar xorg-xev toilet vim amfora
    pacman -S --noconfirm --needed --noprogressbar git base-devel yay

    # Setup snapd
    systemctl enable --now snapd.socket
    ln -s /var/lib/snapd/snap /snap

    yay --nocleanmenu --noeditmenu --nodiffmenu --noupgrademenu --noredownload --combinedupgrade --save # Stop from asking for prompts

    yay -Syu --devel # Perform system upgrade, but also check for development package updates.
    yay -Syuq gparted musikcube ytfzf minecraft-launcher spotify

    systemctl enable sshd					# Allow incoming SSH on networks
    systemctl enable plexmediaserver        
    systemctl enable transmission-daemon    

    # Other apps I would like to install via terminal commands
    # megasync
    # Whatsapp

elif [[ $os == "Darwin" ]] ; then
    cp "$DIR/vimrc" "~/.vimrc"

    # Install homebrew
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" 

    sudo easy_install pip # Install pip

    # Install homebrew packages and apps
    brew tap makeworld-the-better-one/tap # Used to install amfora
    brew -q install amfora \
                    bash \
                    newsboat \
                    steam \
                    gimp \
                    qlab \
                    visual-studio-code \
                    calibre \
                    chromedriver \
                    discord \
                    eclipse-java \
                    ffmpeg \
                    get-lyrical \
                    google-backup-and-sync \
                    groff qs \
                    megasync \
                    messenger \
                    microsoft-auto-update \
                    microsoft-excel \
                    microsoft-powerpoint \
                    microsoft-teams \
                    microsoft-word \
                    minecraft \
                    mutespotifyads \
                    spotify \
                    the-unarchiver \
                    wget --with-libressl \
                    whatsapp \
                    zoomus \
                    terminal-notifier \
                    awk \
                    node
    python3 -m pip install  base64 \
                            bs4 \
                            imdbpy \
                            pick \
                            pillow \
                            py2app \
                            pygame \
                            PyGetWindow \
                            pyperclip \
                            pyqrcode \
                            pyserial \
                            pytesseract \
                            pytube \
                            rawpy \
                            requests \
                            selenium \
                            Send2Trash \
                            spotipy \
                            termcolor \
                            numpy \
                            termcolor \
                            tkinter \
                            unidecode \
                            webbrowser \
                            youtube-dl
    # Link the version of Python to the homebrew's python
    brew -q link python@3.9

    # Automatically restart if the conputer freezes
    sudo systemsetup -setrestartfreeze on

    # Make Finder able to "Quit"
    defaults write com.apple.finder QuitMenuItem -bool true

    # Expand save panel by default
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
    defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

    # Automatically quit printer app once the print jobs complete
    defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

    # Expand print panel by default
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
    defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

    # Save to disk (not to iCloud) by default
    defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

    # Enable AirDrop over Ethernet and on unsupported Macs running Lion
    defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

    # Finder: show all filename extensions
    defaults write NSGlobalDomain AppleShowAllExtensions -bool true

    # Finder: show status bar
    defaults write com.apple.finder ShowStatusBar -bool true

    # Save screenshots to the Downloads folder
    defaults write com.apple.screencapture location -string "~/Downloads"
    # Save screenshots in JPG format (other options: BMP, GIF, JPG, PDF, TIFF)
    defaults write com.apple.screencapture type -string "jpg"
    killall SystemUIServer

    # I forget what these do...
    defaults write com.apple.Safari WebKitMediaPlaybackAllowsInline -bool false
    defaults write com.apple.SafariTechnologyPreview WebKitMediaPlaybackAllowsInline -bool false

    # Turn off the creation of .DS_Store files
    defaults write com.apple.desktopservices DSDontWriteNetworkStores true 
    defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
    defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

    # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
    defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

    # Add the keyboard shortcut âŒ˜ + Enter to send an email in Mail.app
    defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" "@\U21a9"

    touch ~/.hushlogin # Removing the "Last login: blah blah blah" on Terminal startup

    # Disable spell check on iMessage
    defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

    # Get imgcat so you can display images in iTerm2
    sudo curl -o /usr/local/bin/imgcat -0 https://iterm2.com/utilities/imgcat && sudo chmod +x /usr/local/bin/imgcat

    # When opening TextEdit, display a new .txt file instead of the file picker
    defaults write com.apple.TextEdit NSShowAppCentricOpenPanelInsteadOfUntitledFile -bool false

    # Security fix by Sun Knuden (though I changed 127.0.0.1 to 0.0.0.0 because it is faster and still does the job)
    echo "0.0.0.0 ocsp.apple.com isrg.trustid.ocsp.identrust.com" | sudo tee -a /etc/hosts

    # Set Dark mode
    osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to true'

    # Link Python3 to Python (since 2.7 is depricated)
    ln -s -f /usr/local/bin/python3.9 /usr/local/bin/python

    # Installing youtube-dl
    sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl 
    sudo chmod a+rx /usr/local/bin/youtube-dl 
fi
